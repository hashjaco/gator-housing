{"version":3,"sources":["components/HeaderBar/index.js","components/ListingsDisplay/ListingCard/index.js","components/ListingsDisplay/index.js","routes/Home/index.js","routes/Post/index.js","routes/About/index.js","routes/Dashboard/index.js","routes/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["HeaderBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleOpen","bind","assertThisInitialized","state","open","setState","react_default","a","createElement","Navbar","className","light","expand","fixed","NavbarBrand","href","NavbarToggler","onClick","toggleNavbar","Collapse","isOpen","navbar","Nav","NavItem","NavLink","tag","Link","to","UncontrolledDropdown","DropdownToggle","nav","caret","DropdownMenu","right","DropdownItem","Component","ListingCard","toPriceString","number","toLocaleString","undefined","maximumFractionDigits","minimumFractionDigits","class","style","margin","height","borderRadius","src","alt","title","objectFit","width","marginBottom","lineHeight","textTransform","type","fontWeight","fontSize","description","price","ListingsDisplay","properties","updateListing","prevProps","JSON","stringify","searchType","propertyType","console","log","self","fetch","method","then","response","status","Error","json","data","catch","err","length","map","member","ListingsDisplay_ListingCard","property_type","address","App","searchClicked","topicBox","searchWord","clickSearch","renderListings","handleChange","target","_ref","defineProperty","name","value","listingToDisplay","components_ListingsDisplay","maxWidth","textAlign","Form","FormGroup","Label","for","Input","id","placeholder","onChange","Button","color","Post","handleValidSubmit","event","values","marginTop","lib","onValidSubmit","row","sm","Col","required","InputGroup","InputGroupAddon","addonType","step","min","About","Dashboard","Login","padding","react_router_dom","src_components_HeaderBar","react_router","exact","path","component","Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f42e4bb2.chunk.js","sourcesContent":["import './index.css';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, NavItem, NavLink, NavbarBrand, NavbarToggler, Collapse, \r\n  UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem,\r\n  Input, InputGroup, InputGroupAddon, Button } from 'reactstrap';\r\n\r\n\r\n\r\nclass HeaderBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleOpen = this.toggleOpen.bind(this);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n\r\n  toggleOpen() {\r\n    this.setState({\r\n      open: !this.state.open\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar className='main-navbar flex-nowrap bg-white' light expand='md' fixed={'top'} >\r\n\r\n          {/* Logo */}\r\n          <NavbarBrand href='/'>🐊 GatorHouse</NavbarBrand>\r\n\r\n          {/* Link Buttons */}\r\n          <NavbarToggler onClick={this.toggleNavbar} />\r\n          <Collapse isOpen={this.state.open} navbar>\r\n            <Nav className='ml-auto' navbar>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/\">Home</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/post\">Post</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/login\">Login</NavLink>\r\n              </NavItem>\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle nav caret>\r\n                  More\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem tag={Link} to=\"/dashboard\">\r\n                    Dashboard\r\n                  </DropdownItem>\r\n                  <DropdownItem tag={Link} to=\"/about\">\r\n                    About\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default HeaderBar;","import React, { Component, } from 'react';\n\nclass ListingCard extends Component {\n\n  toPriceString = (number) => {\n    return \"$\" + number.toLocaleString(undefined, {maximumFractionDigits:2, minimumFractionDigits:2});\n  }\n\n  render() {\n    return (\n      <div class=\"d-flex flex-row bg-light\" style={{margin:\"1rem 0\", height:\"12rem\", \n        borderRadius:\"4px\"}}>\n\n        {/* Image */}\n        <div>\n          <img src={this.props.src} alt={this.props.title}\n            style={{objectFit:\"cover\", width:\"20rem\", height:\"100%\", borderRadius:\"4px\"}}/>\n        </div>\n\n        {/* Spacer */}\n        <div style={{width:\"1rem\"}} />\n\n        {/* Info */}\n        <div class=\"d-flex flex-column\">\n          <div style={{marginBottom:\"auto\"}}>\n            <div style={{height:\"0.5rem\"}} />\n            <p class=\"text-secondary\" style={{lineHeight:\"0.8rem\", textTransform:\"uppercase\"}}>{this.props.type}</p>\n            <p style={{lineHeight:\"0.8rem\", fontWeight:\"bold\", fontSize:\"1.3rem\"}}>{this.props.title}</p>\n            <p>{this.props.description}</p>\n          </div>\n          <div>\n            <p style={{fontSize:\"1.3rem\"}}>{this.toPriceString(this.props.price)}</p>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n\n}\n\nexport default ListingCard;","import React, { Component } from \"react\";\nimport ListingCard from \"./ListingCard\";\n\nclass ListingsDisplay extends Component {\n\tconstructor(props) {\n        super(props)\n        this.state = {\n            properties: []\n        }\n        this.updateListing = this.updateListing.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateListing();\n    }\n\n    componentDidUpdate(prevProps){\n      if((JSON.stringify(this.props.searchType) !== JSON.stringify(prevProps.searchType)) || (JSON.stringify(this.props.propertyType) !== JSON.stringify(prevProps.propertyType)))\n      {\n            this.updateListing();\n      }\n    }\n\n    updateListing(){\n      console.log(this.props.propertyType);\n      if (!this.props.searchType) return;\n      let self = this;\n        fetch(this.props.searchType, {\n            method: 'GET'\n        }).then(function(response) {\n            if (response.status >= 400) {\n                throw new Error(\"Bad response from server\");\n            }\n            return response.json();\n        }).then(function(data) {\n            self.setState({properties: data});\n        }).catch(err => {\n        console.log('caught it!',err);\n        })\n    }\n\n\n\n  render() {\n\n    if (!this.state.properties) {\n      return(\n        <div>Properties does not exist!</div>\n      )\n    }\n\n    if (this.state.properties.length === 0) {\n      return(\n        <div>No results found.</div>\n      )\n    }\n\n    return (\n      <div class=\"d-flex flex-column\">\n        {this.state.properties.map(member =>\n \n        <ListingCard title=\"A House\" type={member.property_type} src=\"https://media.gettyimages.com/photos/traditional-suburban-house-picture-id103761767?s=612x612\"\n          description={member.address}\n          price={member.price} />\n\t\t   )}\n      </div>\n    )\n  }\n\n}\n\nexport default ListingsDisplay;","import React, { Component } from 'react';\nimport ListingsDisplay from '../../components/ListingsDisplay';\nimport { Form, FormGroup, Label, Input, Button, } from 'reactstrap';\n\n\nclass App extends Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {\n      searchClicked: false,\n      topicBox: \"\",\n      propertyType: \"Any\",\n      searchWord: \"\",\n    };\n\n    // This binding is necessary to make `this` work in the callback\n    this.clickSearch = this.clickSearch.bind(this);\n    this.renderListings = this.renderListings.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n   clickSearch() {\n    console.log( this.state.topicBox , this.state.propertyType); \n    this.setState({searchClicked: true });\n  }\n\n  renderListings(){\n    var listingToDisplay;\n    if (this.state.searchClicked) {\n      listingToDisplay = <ListingsDisplay searchType= {\"/searchproperties/\"+this.state.topicBox} propertyType={this.state.propertyType}  />;\n    } else {\n      listingToDisplay = <ListingsDisplay searchType= '/properties' />;\n    }\n\n    return(\n          <div>\n            {listingToDisplay}\n          </div>\n      );\n  }\n\n  render() {\n    return (\n      // Main Div\n      <div style={{maxWidth:\"60rem\", margin:\"auto\"}}>\n\n        {/* Spacer */}\n        <div style={{height:\"3rem\"}}/>\n\n        {/* Title */}\n        <div style={{textAlign:\"center\"}}>\n          <h1>SFSU Housing (Vertical Prototype)</h1>\n          <h2>CSC 648 Team 14</h2>\n        </div>\n\n        {/* Spacer */}\n        <div style={{height:\"2rem\"}}/>\n\n        {/* Search Form */}\n        <Form>\n          <FormGroup>\n            <Label for=\"searchText\">Search</Label>\n            <Input type=\"text\" name=\"topicBox\"  id=\"searchBar\" placeholder='e.g. \"Studio near Stonestown\"' value={this.state.topicBox }\n              onChange={ this.handleChange } />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"roomType\">Listing Type</Label>\n            <Input type=\"select\" name=\"propertyType\" id=\"roomType\" onChange={this.handleChange}>\n              <option>Any</option>\n              <option>Room</option>\n              <option>Studio</option>\n              <option>House</option>\n            </Input>\n          </FormGroup>\n\n          {/* Spacer */}\n          <div style={{height:\"1rem\"}}/>\n\n          <Button color=\"primary\" style={{width:\"100%\", height:\"3rem\"}} onClick={this.clickSearch}>Search</Button>\n        </Form>\n\n        {/* Spacer */}\n        <div style={{height:\"1rem\"}}/>\n\n        {/* The listings are here */}\n        <div>\n        {this.renderListings()}\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { \n  Form, FormGroup, Col, Label, Button, \n  Input, InputGroup, InputGroupAddon,\n} from 'reactstrap';\nimport { AvForm, AvField, AvInput, } from 'availity-reactstrap-validation';\n\nclass Post extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleValidSubmit = this.handleValidSubmit.bind(this)\n    this.state = {}\n  }\n\n  handleValidSubmit(event, values) {\n    this.setState({values});\n  }\n\n  render() {\n    return (\n      <div style={{marginTop:\"2rem\"}}>\n        <h1>Post a Listing</h1>\n        <AvForm onValidSubmit={this.handleValidSubmit} style={{marginTop:\"2rem\"}}>\n          <FormGroup row>\n            <Label sm={2}>Title</Label>\n            <Col sm={10}>\n              <AvInput name='title' required/>\n            </Col>\n          </FormGroup>\n\n          <FormGroup row>\n            <Label sm={2}>Listing Type</Label>\n            <Col sm={10}>\n              <AvField type='select' name='type'>\n                <option value=\"Studio\">Studio</option>\n                <option value=\"House\">House</option>\n                <option value=\"Room\">Room only</option>\n              </AvField>\n            </Col>\n          </FormGroup>\n\n          <FormGroup row>\n            <Label sm={2}>Rent per Month</Label>\n            <Col sm={10}>\n              <InputGroup>\n                <InputGroupAddon addonType='prepend'>$</InputGroupAddon>\n                <Input type='number' step='0.01' id='price' min='0' placeholder=\"(e.g. 1000.00)\" />\n              </InputGroup>\n            </Col>\n          </FormGroup>\n\n          <FormGroup row>\n            <Label sm={2}>Description</Label>\n            <Col sm={10}>\n              <InputGroup>\n                <Input type='textarea' id='title' placeholder='(Provide an informative description)'/>\n              </InputGroup>\n            </Col>\n          </FormGroup>\n\n          <FormGroup>\n            <Button color=\"primary\" style={{width:\"100%\", height:\"3rem\"}}>Post</Button>\n          </FormGroup>\n\n        </AvForm>\n        {this.state.values && <div>\n          <h5>Submission values</h5>\n          Values: <pre>{JSON.stringify(this.state.values, null, 2)}</pre>\n        </div>}\n      </div>\n    )\n  }\n}\n\nexport default Post;","import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n    return (\n      <div style={{marginTop:\"2rem\"}}>\n        <p>(About page goes here)</p>\n      </div>\n    )\n  }\n}\n\nexport default About;","import React, { Component } from 'react';\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div style={{marginTop:\"2rem\"}}>\n        <p>(Dashboard goes here)</p>\n      </div>\n    )\n  }\n}\n\nexport default Dashboard;","import React, { Component } from 'react';\n\nclass Login extends Component {\n  render() {\n    return (\n      <div style={{marginTop:\"2rem\"}}>\n        <p>(Login goes here)</p>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport HeaderBar from './components/HeaderBar';\nimport Home from './routes/Home';\nimport Post from './routes/Post';\nimport About from './routes/About';\nimport Dashboard from './routes/Dashboard';\nimport Login from './routes/Login';\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      // Main Div\n      <div style={{maxWidth:\"50rem\", margin:\"auto\", padding:\"3rem\"}}>\n\n        {/* The BrowserRouter displays a different container based on the current url. */}\n        {/* These containers are imported from the routes directory. */}\n        <BrowserRouter>\n          <HeaderBar />\n          <Route exact path='/' component={Home} />\n          <Route exact path='/post' component={Post} />\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/about' component={About} />\n          <Route exact path='/dashboard' component={Dashboard} />\n        </BrowserRouter>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all public tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}